{"mappings":"AAAAA,QAAQC,IAAI,oBAGR,MAAEC,EAAMC,SAASC,cAAc,aAC7BC,EAAOF,SAASC,cAAc,SAC9BE,EAAQH,SAASC,cAAc,eAC/BG,EAAOJ,SAASC,cAAc,cAE9BI,EAAeL,SAASC,cAAc,kBAEtCK,EAAcN,SAASC,cAAc,yBACrCM,EAAeP,SAASC,cAAc,yBACtCO,EAAaR,SAASC,cAAc,uBAGpCQ,EAAe,CACnB,SACM,QACD,WACG,UACD,UACA,UACA,SACD,UACC,WACC,UACD,WACC,WAEJC,EAAS,CACb,SACM,YACG,WACD,SACF,SACA,WACC,UAIsCC,aAAnC,KAEN,MAAEC,EAAc,IAAIC,KAClBC,EAAaJ,EAAOE,EAAYG,UAChCC,EAAcJ,EAAYK,UAC1BC,EAAeT,EAAaG,EAAYO,YACxCC,EAAcR,EAAYS,cAG1BC,EAAcV,EAAYW,WAC1BC,EAAiBZ,EAAYa,aAC7BC,EAAiBd,EAAYe,aAG7BC,EAAe,EAAaF,EAC5BG,EAAgB,EAAaL,EAC7BM,EACJ,GAAaR,EAAc,GAAkBE,EAIzCO,EAAa,GAAGT,EACnBU,WACAC,SAAS,EAAG,UAAUT,EACtBQ,WACAC,SAAS,EAAG,UAAUP,EAAeM,WAAWC,SAAS,EAAG,OAY/DlC,EAAImC,YAAcpB,EAClBZ,EAAKgC,YAAclB,EACnBb,EAAM+B,YAAchB,EACpBd,EAAK8B,YAAcd,EAEnBf,EAAa6B,YAAc,iBAACH,IAGfzB,EAAD6B,MAAMC,UAAY,UAAUR,QACVrB,EAAjB4B,MAAMC,UAAY,UAAUP,QACXrB,EAAnB2B,MAAMC,UAAY,UAAUN,OAAiB,GACvD,KAGI,MAADO,EAAMrC,SAASC,cAAc,WAC7BqC,EAAatC,SAASC,cAAc,aAE1C,IAAIsC,EAAU,EAEJC,YAAC,KACTH,EAAIF,MAAMM,QAAU,QAGI,MAAlBC,EAAK/B,aAAY,KACrB4B,GAAW,EACXD,EAAWJ,YAAcK,EAAU,IAG9BA,IACHI,cAAcD,GAIdL,EAAIF,MAAMM,QAAU,O,GAErB,IAAK,GACP,KAMH,MAAMG,EAAQ5C,SAASC,cAAc,aAC/B4C,EAAY7C,SAASC,cAAc,iBAEzC2C,EAAME,iBAAiB,SAGS,WAC9B,IAAIC,EAAU,EAIyD,IAAnEF,EAAUG,UAAUC,SAAQC,GAAQA,EAAIhB,YAAc,KAE1D,MAAMiB,EAAW,IAAIN,EAAUG,UAAUI,KAAI,CAACC,EAAGC,IA4B1C,IAAIC,SAAQ,CAACC,EAAKC,KACRC,KAAKC,SAEP,GACXH,EAAI,MAEDC,EAAC,KAAO,MA/B+CF,QAAtDK,WAAWT,GAAUU,MAAKC,IAChCA,EAAMb,SAAQ,CAACc,EAAMT,KACnBd,YAAW,KACW,cAAhBuB,EAAKC,SACPjB,GAAW,GAG8CF,EAAjDG,SAASM,GAAGpB,YAAc6B,EAAKE,OAASF,EAAKG,OAGnDrB,EAAUG,SAASmB,OAAS,IAAMb,GACpCd,YAAW,KACLO,IAAYF,EAAUG,SAASmB,QAAWpB,EAG5CqB,MAAM,cAFNA,MAAM,SAEa,GAEpB,IAAI,GAEJ,IAAJd,EAAS,GACZ,G","sources":["src/module-09-Rysich/practice-09.js"],"sourcesContent":["console.log('Module-09-Rysich');\n//------------ 1. Календар, годинник -------------------------\n// Дата:\nconst day = document.querySelector('.date-day'); // день тижня\nconst date = document.querySelector('.date'); // день місяця\nconst month = document.querySelector('.date-month'); //місяць\nconst year = document.querySelector('.date-year'); //рік\n// digitalClock:\nconst digitalClock = document.querySelector('.digital-clock');\n//clock:\nconst arrowSecond = document.querySelector('.clock-seconds__arrow'); //секундна стрілка\nconst arrowMinutes = document.querySelector('.clock-minutes__arrow'); //хвилинна стрілка\nconst arrowHours = document.querySelector('.clock-hours__arrow'); //годинна стрілка\n\n//масиви для коректного виводу значення Date\nconst namesOfMonth = [\n  'Січень',\n  'Лютий',\n  'Березень',\n  'Квітень',\n  'Травень',\n  'Червень',\n  'Липень',\n  'Серпень',\n  'Вересень',\n  'Жовтень',\n  'Листопад',\n  'Грудень',\n];\nconst arrDay = [\n  'Неділя',\n  'Понеділок',\n  'Вівторок',\n  'Середа',\n  'Четвер',\n  'П`ятниця',\n  'Субота',\n];\n\n//для актуальних даних, наприклад на межі 23:59 і наступного дня\nsetInterval(() => {\n  //Дата\n  const currentTime = new Date();\n  const currentDay = arrDay[currentTime.getDay()]; // день тижня\n  const currentDate = currentTime.getDate(); // день місяця\n  const currentMonth = namesOfMonth[currentTime.getMonth()]; //місяць\n  const currentYear = currentTime.getFullYear(); //рік\n\n  //годинник\n  const currentHour = currentTime.getHours(); //години\n  const currentMinutes = currentTime.getMinutes(); //хвилини\n  const currentSeconds = currentTime.getSeconds(); //секунди\n\n  //механічний годинник\n  const changeSecond = (360 / 60) * currentSeconds; //360 повне коло / на 60 сек\n  const changeMinutes = (360 / 60) * currentMinutes;\n  const changeHours =\n    (360 / 12) * currentHour + (360 / 12 / 60) * currentMinutes; //щоб стрілка апоказувала не трого на годину, а між теж\n\n  //форматуємо для електронного годинника (якщо 1 сек, щоб прописало 01)\n  // padStart - приймає (довжина яка має бути; якщо символів не вистачає, то що підставляємо); працює із строкою\n  const formatTime = `${currentHour\n    .toString()\n    .padStart(2, '0')} : ${currentMinutes\n    .toString()\n    .padStart(2, '0')} : ${currentSeconds.toString().padStart(2, '0')}`;\n\n  //-----------------\n  // console.log('Date:', currentTime);\n  // console.log('Day:', currentTime.getDay());\n  // console.log('Day from arr:', arrDay[currentTime.getDay()]);\n  // console.log('число:', currentTime.getDate());\n  // console.log(\n  //   `getMonth(0-11): ${currentTime.getMonth()}, from arr: ${currentMonth}`\n  // );\n  // console.log('Year:', currentYear);\n  //------------------\n  day.textContent = currentDay;\n  date.textContent = currentDate;\n  month.textContent = currentMonth;\n  year.textContent = currentYear;\n\n  digitalClock.textContent = `Поточний час: ${formatTime}`; //електронний годинник\n\n  //стрілка по колу\n  arrowSecond.style.transform = `rotate(${changeSecond}deg)`; //секундна стрілка рухається по колу\n  arrowMinutes.style.transform = `rotate(${changeMinutes}deg)`; //хвилинна стрілка рухається по колу\n  arrowHours.style.transform = `rotate(${changeHours}deg)`; //годинникова стрілка рухається по колу\n}, 1000);\n\n// ------------ 2. реклама ---------\nconst box = document.querySelector('.js-box');\nconst titleTimer = document.querySelector('.js-timer');\n\nlet counter = 4; //для таймеру\n\nsetTimeout(() => {\n  box.style.display = 'block'; //показали перший раз рекламу\n\n  //таймер до зникнення реклами\n  const id = setInterval(() => {\n    counter -= 1;\n    titleTimer.textContent = counter + 's';\n\n    //якщо дійшли до нуля\n    if (!counter) {\n      clearInterval(id);\n      // //для закриття реклами кліком по хрестику\n      // titleTimer.textContent = 'X';\n      // titleTimer.addEventListener('click', onClick);\n      box.style.display = 'none'; //закрили рекламу\n    }\n  }, 1000);\n}, 2000);\n\nfunction onClick() {\n  box.style.display = 'none';\n}\n//------------ 3 game \"OneArmedBandit\" (Promis)----------------------\nconst start = document.querySelector('.js-start');\nconst container = document.querySelector('.js-container');\n\nstart.addEventListener('click', onStart);\n\n//map, Promise.allSettled(приймає масив, повертає масив об'єктів)\nfunction onStart() {\n  let counter = 0;\n\n  //console.dir(container); //можемо використати children\n  //так як це псевдомасив, то розпилимо його(перетворимо у повноційний масив із методами)\n  [...container.children].forEach(box => (box.textContent = ''));\n\n  const promises = [...container.children].map((_, i) => createPromise(i)); //в 'map' якщо перший або другий параметр не потрібен, щоб його не підсвічувало як не використанний, ставимо _\n\n  // Promise.allSettled приймає масив промісів, повертає масив об'єктів (в якому є статус і значення)\n  Promise.allSettled(promises).then(items => {\n    items.forEach((item, i) => {\n      setTimeout(() => {\n        if (item.status === 'fulfilled') {\n          counter += 1;\n        }\n        //по черзі в кожне 'віконце' підсавляємо в текстовий контент item.value, якщо не має то item.reason\n        container.children[i].textContent = item.value || item.reason;\n\n        //перевіряємо чи переміг чи програш\n        if (container.children.length - 1 === i) {\n          setTimeout(() => {\n            if (counter === container.children.length || !counter) {\n              alert('Winner');\n            } else {\n              alert('Lost money');\n            }\n          }, 500);\n        }\n      }, i * 1000);\n    });\n  });\n}\n\nfunction createPromise() {\n  return new Promise((res, rej) => {\n    const random = Math.random();\n\n    if (random > 0.5) {\n      res('🤑');\n    } else {\n      rej('😈');\n    }\n  });\n}\n//==== 2 спосіб:\n\n// //---forEach, додаткова обробка then/catch/finally, if/else---\n// function onStart() {\n//   const result = [];\n//   //console.dir(container); //можемо використати children\n//   //так як це псевдомасив, то розпилимо його(перетворимо у повноційний масив із методами)\n//   [...container.children].forEach(box => (box.textContent = ''));\n//   [...container.children].forEach((box, i) => {\n//     createPromise(i)\n//       .then(smile => {\n//         box.textContent = smile;\n//         result.push('1');\n//       })\n//       .catch(smile => {\n//         box.textContent = smile;\n//       })\n//       .finally(() => {\n//         setTimeout(() => {\n//           if (i === container.children.length - 1) {\n//             if (!result.length || result.length === 3) {\n//               alert('Winner');\n//             } else {\n//               alert('Lost money');\n//             }\n//           }\n//         }, 500);\n//       });\n//   });\n// }\n//\n// function createPromise(delay) {\n//   return new Promise((res, rej) => {\n//     setTimeout(() => {\n//       const random = Math.random();\n\n//       if (random > 0.5) {\n//         res('🤑');\n//       } else {\n//         rej('😈');\n//       }\n//     }, 1000 * delay);\n//   });\n// }\n"],"names":["console","log","$b02d79ab54fd67ed$var$day","document","querySelector","$b02d79ab54fd67ed$var$date","$b02d79ab54fd67ed$var$month","$b02d79ab54fd67ed$var$year","$b02d79ab54fd67ed$var$digitalClock","$b02d79ab54fd67ed$var$arrowSecond","$b02d79ab54fd67ed$var$arrowMinutes","$b02d79ab54fd67ed$var$arrowHours","$b02d79ab54fd67ed$var$namesOfMonth","$b02d79ab54fd67ed$var$arrDay","setInterval","currentTime","Date","currentDay","getDay","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHour","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","changeSecond","changeMinutes","changeHours","formatTime","toString","padStart","textContent","style","transform","$b02d79ab54fd67ed$var$box","$b02d79ab54fd67ed$var$titleTimer","$b02d79ab54fd67ed$var$counter","setTimeout","display","id","clearInterval","$b02d79ab54fd67ed$var$start","$b02d79ab54fd67ed$var$container","addEventListener","counter1","children","forEach","box1","promises","map","_","i","Promise","res","rej","Math","random","allSettled","then","items","item","status","value","reason","length","alert"],"version":3,"file":"module-09-Rysich.20dd13e6.js.map"}